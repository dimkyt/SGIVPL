#version 450

in vec4 pos_wcs;
in vec3 normal;
in vec3 diffuse_material;
in vec2 texCoord;
in float has_diffuse_texture;

uniform vec3 light_pos;
uniform vec3 constant_intensity;
uniform sampler2D diffuse_sampler;

// Ouput data
out vec4 final_color;

void main(void)
{ 
  vec3 diffuse_texture_colour = has_diffuse_texture==0.0 ? vec3(1.0, 1.0, 1.0) : texture(diffuse_sampler, texCoord.st).xyz;
  vec3 light_dir = vec3(light_pos.x-pos_wcs.x, light_pos.y-pos_wcs.y, light_pos.z-pos_wcs.z);
  float costh = max(dot(normalize(light_dir),normal),0.0);
  vec3 Kd = diffuse_material * diffuse_texture_colour;
  vec3 direct_light = Kd*costh;

  final_color = vec4(direct_light, 1.0);
  //final_color = vec4(1.0, 1.0, 1.0, 1.0);
}
